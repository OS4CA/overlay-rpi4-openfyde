Index: src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/config.h
===================================================================
--- src.orig/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/config.h
+++ src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/config.h
@@ -532,7 +532,7 @@
 #define CONFIG_CUDA_SDK 0
 #define CONFIG_LIBNPP 0
 #define CONFIG_LIBMFX 0
-#define CONFIG_MMAL 0
+#define CONFIG_MMAL 1
 #define CONFIG_OMX 0
 #define CONFIG_OPENCL 0
 #define CONFIG_VULKAN 0
@@ -827,7 +827,7 @@
 #define CONFIG_H264_CRYSTALHD_DECODER 0
 #define CONFIG_H264_V4L2M2M_DECODER 0
 #define CONFIG_H264_MEDIACODEC_DECODER 0
-#define CONFIG_H264_MMAL_DECODER 0
+#define CONFIG_H264_MMAL_DECODER 1
 #define CONFIG_H264_QSV_DECODER 0
 #define CONFIG_H264_RKMPP_DECODER 0
 #define CONFIG_HAP_DECODER 0
@@ -869,13 +869,13 @@
 #define CONFIG_MOTIONPIXELS_DECODER 0
 #define CONFIG_MPEG1VIDEO_DECODER 0
 #define CONFIG_MPEG2VIDEO_DECODER 0
-#define CONFIG_MPEG4_DECODER 1
+#define CONFIG_MPEG4_DECODER 0
 #define CONFIG_MPEG4_CRYSTALHD_DECODER 0
 #define CONFIG_MPEG4_V4L2M2M_DECODER 0
-#define CONFIG_MPEG4_MMAL_DECODER 0
+#define CONFIG_MPEG4_MMAL_DECODER 1
 #define CONFIG_MPEGVIDEO_DECODER 0
 #define CONFIG_MPEG1_V4L2M2M_DECODER 0
-#define CONFIG_MPEG2_MMAL_DECODER 0
+#define CONFIG_MPEG2_MMAL_DECODER 1
 #define CONFIG_MPEG2_CRYSTALHD_DECODER 0
 #define CONFIG_MPEG2_V4L2M2M_DECODER 0
 #define CONFIG_MPEG2_QSV_DECODER 0
@@ -979,7 +979,7 @@
 #define CONFIG_VC1_DECODER 0
 #define CONFIG_VC1_CRYSTALHD_DECODER 0
 #define CONFIG_VC1IMAGE_DECODER 0
-#define CONFIG_VC1_MMAL_DECODER 0
+#define CONFIG_VC1_MMAL_DECODER 1
 #define CONFIG_VC1_QSV_DECODER 0
 #define CONFIG_VC1_V4L2M2M_DECODER 0
 #define CONFIG_VCR1_DECODER 0
Index: src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/libavcodec/codec_list.c
===================================================================
--- src.orig/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/libavcodec/codec_list.c
+++ src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm-neon/libavcodec/codec_list.c
@@ -22,4 +22,9 @@ static const AVCodec * const codec_list[
     &ff_pcm_s32le_decoder,
     &ff_pcm_u8_decoder,
     &ff_libopus_decoder,
+    &ff_h264_mmal_decoder,
+    &ff_vp8_mmal_decoder,
+    &ff_mpeg2_mmal_decoder,
+    &ff_mpeg4_mmal_decoder,
+    &ff_vc1_mmal_decoder,
     NULL };
Index: src/third_party/ffmpeg/ffmpeg_generated.gni
===================================================================
--- src.orig/third_party/ffmpeg/ffmpeg_generated.gni
+++ src/third_party/ffmpeg/ffmpeg_generated.gni
@@ -637,6 +637,7 @@ if (use_linux_config && current_cpu == "
   ffmpeg_c_sources += [
     "libavcodec/arm/blockdsp_init_neon.c",
     "libavcodec/arm/idctdsp_init_neon.c",
+    "libavcodec/mmaldec.c",
   ]
   ffmpeg_gas_sources += [
     "libavcodec/arm/blockdsp_neon.S",
Index: src/third_party/ffmpeg/libavcodec/allcodecs.c
===================================================================
--- src.orig/third_party/ffmpeg/libavcodec/allcodecs.c
+++ src/third_party/ffmpeg/libavcodec/allcodecs.c
@@ -363,6 +363,7 @@ extern const AVCodec ff_vp7_decoder;
 extern const AVCodec ff_vp8_decoder;
 extern const AVCodec ff_vp8_rkmpp_decoder;
 extern const AVCodec ff_vp8_v4l2m2m_decoder;
+extern const AVCodec ff_vp8_mmal_decoder;
 extern const AVCodec ff_vp9_decoder;
 extern const AVCodec ff_vp9_rkmpp_decoder;
 extern const AVCodec ff_vp9_v4l2m2m_decoder;
Index: src/third_party/ffmpeg/libavcodec/mmaldec.c
===================================================================
--- src.orig/third_party/ffmpeg/libavcodec/mmaldec.c
+++ src/third_party/ffmpeg/libavcodec/mmaldec.c
@@ -23,7 +23,6 @@
  * @file
  * MMAL Video Decoder
  */
-
 #include <bcm_host.h>
 #include <interface/mmal/mmal.h>
 #include <interface/mmal/mmal_parameters_video.h>
@@ -150,14 +149,7 @@ static void ffmmal_stop_decoder(AVCodecC
     MMALDecodeContext *ctx = avctx->priv_data;
     MMAL_COMPONENT_T *decoder = ctx->decoder;
     MMAL_BUFFER_HEADER_T *buffer;
-
-    mmal_port_disable(decoder->input[0]);
-    mmal_port_disable(decoder->output[0]);
-    mmal_port_disable(decoder->control);
-
-    mmal_port_flush(decoder->input[0]);
-    mmal_port_flush(decoder->output[0]);
-    mmal_port_flush(decoder->control);
+    mmal_component_disable(decoder);
 
     while ((buffer = mmal_queue_get(ctx->queue_decoded_frames)))
         mmal_buffer_header_release(buffer);
@@ -354,9 +346,7 @@ static av_cold int ffmmal_init_decoder(A
     MMAL_ES_FORMAT_T *format_in;
     MMAL_COMPONENT_T *decoder;
     int ret = 0;
-
     bcm_host_init();
-
     if (mmal_vc_init()) {
         av_log(avctx, AV_LOG_ERROR, "Cannot initialize MMAL VC driver!\n");
         return AVERROR(ENOSYS);
@@ -384,6 +374,9 @@ static av_cold int ffmmal_init_decoder(A
     case AV_CODEC_ID_VC1:
         format_in->encoding = MMAL_ENCODING_WVC1;
         break;
+    case AV_CODEC_ID_VP8:
+        format_in->encoding = MMAL_ENCODING_VP8;
+        break;
     case AV_CODEC_ID_H264:
     default:
         format_in->encoding = MMAL_ENCODING_H264;
@@ -458,12 +451,7 @@ static void ffmmal_flush(AVCodecContext
 
     ffmmal_stop_decoder(avctx);
 
-    if ((status = mmal_port_enable(decoder->control, control_port_cb)))
-        goto fail;
-    if ((status = mmal_port_enable(decoder->input[0], input_callback)))
-        goto fail;
-    if ((status = mmal_port_enable(decoder->output[0], output_callback)))
-        goto fail;
+    mmal_component_enable(decoder);
 
     return;
 
@@ -577,7 +565,6 @@ done:
 static int ffmmal_fill_input_port(AVCodecContext *avctx)
 {
     MMALDecodeContext *ctx = avctx->priv_data;
-
     while (ctx->waiting_buffers) {
         MMAL_BUFFER_HEADER_T *mbuffer;
         FFBufferEntry *buffer;
@@ -657,7 +644,7 @@ static int ffmal_copy_frame(AVCodecConte
 
     frame->pts = buffer->pts == MMAL_TIME_UNKNOWN ? AV_NOPTS_VALUE : buffer->pts;
     frame->pkt_dts = AV_NOPTS_VALUE;
-
+    frame->reordered_opaque = buffer->pts;
 done:
     return ret;
 }
@@ -794,7 +781,6 @@ static int ffmmal_decode(AVCodecContext
 
     // ffmmal_read_frame() can block for a while. Since the decoder is
     // asynchronous, it's a good idea to fill the ports again.
-
     if ((ret = ffmmal_fill_output_port(avctx)) < 0)
         return ret;
 
@@ -849,3 +835,4 @@ FFMMAL_DEC(h264, AV_CODEC_ID_H264)
 FFMMAL_DEC(mpeg2, AV_CODEC_ID_MPEG2VIDEO)
 FFMMAL_DEC(mpeg4, AV_CODEC_ID_MPEG4)
 FFMMAL_DEC(vc1, AV_CODEC_ID_VC1)
+FFMMAL_DEC(vp8, AV_CODEC_ID_VP8)
Index: src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/config.h
===================================================================
--- src.orig/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/config.h
+++ src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/config.h
@@ -532,7 +532,7 @@
 #define CONFIG_CUDA_SDK 0
 #define CONFIG_LIBNPP 0
 #define CONFIG_LIBMFX 0
-#define CONFIG_MMAL 0
+#define CONFIG_MMAL 1
 #define CONFIG_OMX 0
 #define CONFIG_OPENCL 0
 #define CONFIG_VULKAN 0
@@ -827,7 +827,7 @@
 #define CONFIG_H264_CRYSTALHD_DECODER 0
 #define CONFIG_H264_V4L2M2M_DECODER 0
 #define CONFIG_H264_MEDIACODEC_DECODER 0
-#define CONFIG_H264_MMAL_DECODER 0
+#define CONFIG_H264_MMAL_DECODER 1
 #define CONFIG_H264_QSV_DECODER 0
 #define CONFIG_H264_RKMPP_DECODER 0
 #define CONFIG_HAP_DECODER 0
@@ -872,10 +872,10 @@
 #define CONFIG_MPEG4_DECODER 1
 #define CONFIG_MPEG4_CRYSTALHD_DECODER 0
 #define CONFIG_MPEG4_V4L2M2M_DECODER 0
-#define CONFIG_MPEG4_MMAL_DECODER 0
+#define CONFIG_MPEG4_MMAL_DECODER 1
 #define CONFIG_MPEGVIDEO_DECODER 0
 #define CONFIG_MPEG1_V4L2M2M_DECODER 0
-#define CONFIG_MPEG2_MMAL_DECODER 0
+#define CONFIG_MPEG2_MMAL_DECODER 1
 #define CONFIG_MPEG2_CRYSTALHD_DECODER 0
 #define CONFIG_MPEG2_V4L2M2M_DECODER 0
 #define CONFIG_MPEG2_QSV_DECODER 0
@@ -979,7 +979,7 @@
 #define CONFIG_VC1_DECODER 0
 #define CONFIG_VC1_CRYSTALHD_DECODER 0
 #define CONFIG_VC1IMAGE_DECODER 0
-#define CONFIG_VC1_MMAL_DECODER 0
+#define CONFIG_VC1_MMAL_DECODER 1
 #define CONFIG_VC1_QSV_DECODER 0
 #define CONFIG_VC1_V4L2M2M_DECODER 0
 #define CONFIG_VCR1_DECODER 0
Index: src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/libavcodec/codec_list.c
===================================================================
--- src.orig/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/libavcodec/codec_list.c
+++ src/third_party/ffmpeg/chromium/config/ChromeOS/linux/arm64/libavcodec/codec_list.c
@@ -22,4 +22,9 @@ static const AVCodec * const codec_list[
     &ff_pcm_s32le_decoder,
     &ff_pcm_u8_decoder,
     &ff_libopus_decoder,
+    &ff_h264_mmal_decoder,
+    &ff_vp8_mmal_decoder,
+    &ff_mpeg2_mmal_decoder,
+    &ff_mpeg4_mmal_decoder,
+    &ff_vc1_mmal_decoder,
     NULL };
